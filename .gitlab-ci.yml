image: thecodingmachine/php:8.2-v4-cli-node20

stages:
  - caching
  - testing
  - qualifying
  - staging
  - browsing

variables:
  TRIGGER_CACHE: "off"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"


generate_deps:
  stage: caching
  tags:
    - formation
  script:
    - cd project
    - composer install
  cache:
    key: deps
    policy: push
    paths:
      - project/vendor
  rules:
    - changes:
        - project/composer.json
    - if: $TRIGGER_CACHE == "on" # /[]{2}.*$/
      when: on_success

.test:
  stage: testing
  tags:
    - formation
  before_script:
    - >
      sed -i 
      "s|pcov.directory = __DIR__|pcov.directory = $CI_PROJECT_DIR/project|g" 
      40-pcov.ini
    - sudo mv 40-pcov.ini /etc/php/8.2/cli/conf.d/
  script:
    - cd project
    - >
      php ./vendor/bin/phpunit 
      -c phpunit.xml
      --log-junit=test.xml 
      --coverage-cobertura=cobertura.xml
      --coverage-clover=clover.xml
      --coverage-text --colors=never
      tests
  coverage: /^\s*Lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    expire_in: "1 hour"
    paths:
      - project/clover.xml
    reports:
      junit: project/test.xml
      coverage_report:
        path: project/cobertura.xml
        coverage_format: cobertura
  cache:
    key: deps
    untracked: true
    policy: pull

# préfixer un job avec "." => le job est désactivé
.sonar:
  stage: qualifying
  image:
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  tags:
    - formation
  script:
    - >
      sonar-scanner
      -Dsonar.projectKey=project
      -Dsonar.sources=./project
      -Dsonar.exclusions=./project/vendor
      -Dsonar.coverage.exclusions=**/tests/**
      -Dsonar.php.coverage.reportPaths=./project/clover.xml
      -Dsonar.host.url=http://gitlab.lan.fr:9000
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.qualitygate.wait=true

  
## job de déploiement sur un tag git
# staging == environnement de démonstration
.staging:
  #image: ansible | puppet | chef | tout ce qui contient ssh scp sftp ...
  stage: staging
  tags:
    - formation
  script:
    - echo "DEPLOY!!"
  # project > operate > Environnements
  environment:
    name: staging
    url: https://dawan.fr
  ## qui déploie ?
  rules:
    # UN TAG de forme "v*"
    # project > settings > Repository > protected Tags > add Tag
    - if: $CI_COMMIT_TAG =~ /^v.*/

## job d'interface avec phpunit + selenium 

e2e:
  stage: browsing
  tags:
    - formation
  services:
    - name: selenium/standalone-chrome
      # alias réseau == DNS connu dans le réseau docker donc dans le client !
      alias: selenium-server
  # installation du driver (côté client)
  before_script:
    - sudo unzip chromedriver.zip -d /usr/local/bin
    - sudo chmod u+x /usr/local/bin/chromedriver
  script:
    - cd project
    - >
      php ./vendor/bin/phpunit 
      -c phpunit.xml
      tests/SearchE2ETest.php
  cache:
    key: deps
    untracked: true
    policy: pull